#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

require "/usr/libexec/nethserver/api/lib/helper_functions.pl";
require "/usr/libexec/nethserver/api/lib/auth_functions.pl";

use warnings;
use strict;
use esmith::ConfigDB;
use esmith::event;

my $db = esmith::ConfigDB->open();
my $delegations = $db->get_prop('cockpit.socket','delegation')|| '';

my $exitCode = 0;
my $ret;

my $input = readInput();
my $role = $input->{'role'} || '';
my $groupAdmins = get_adminGroup();
my $values = '';

if ($role ne  $groupAdmins) {
    if ($delegations !~ /,$role:|^$role:/) {# the role doesn't exist
        error('NotValidRole','This role does not exist');
    } else {
        my @Keys = split(',', $delegations);
        foreach (@Keys) {
            my @props = split(':',$_);
            if ($props[0] ne $role) { #keep these values
                my $group = shift(@props);
                $values .= $group.':'.join(':',@props).',';
            }
        }
        $values =~ s/,$//;
        $db->set_prop('cockpit.socket','delegation', $values); 
        if(esmith::event::event_signal('delegation-save')) {
            $ret = {'state' => 'success'};
        } else {
            $ret = {
                'type' => 'Error',
                'message' => 'delegation.api_delete_failed',
                'attributes' => {
                    'event_name' => 'delegation-save',
                }
            };
            $exitCode = 1;
        }
        print encode_json($ret);
        exit($exitCode);
    }
}