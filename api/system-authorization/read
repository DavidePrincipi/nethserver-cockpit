#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use JSON;
use NethServer::ApiTools;

my %appRoutes = ();
my %sysRoutes = ();
my %pathMap = (
    "certificate" => "certificates",
    "users" => "users-groups",
    "openssh" => "ssh",
);
my $isAdmin = 0;
my $isRoot = $> eq 0 ? 1 : 0;

$ENV{'LANG'} = 'C';
my $skip = 1;
foreach my $line (split "\n", NethServer::ApiTools::exec_slurp('/usr/bin/sudo', '-ll')) {
    if($line =~ /^Sudoers entry:/) {
        $skip = 0;
        next;
    }
    if($skip) {
        next;
    }

    if($line =~ m|^\s+/usr/libexec/nethserver/api/system-(\w+)/(\w+/)*update|) {
        $sysRoutes{exists $pathMap{$1} ? $pathMap{$1} : $1} = 1;
    } elsif($line =~ m|^\s+/usr/libexec/nethserver/api/(\w+)(/\w+)+|) {
        $appRoutes{$1} = 1;
    }

    # isAdmin assertion: true if ALL commands are enabled (wheel-like access)
    if($line =~ m|^\s+ALL|) {
        $isAdmin = 1;
        %sysRoutes = map { $_ => 1 } (
            "storage",
            "disk-usage",
            "certificates",
            "dns",
            "dhcp",
            "backup",
            "services",
            "users-groups",
            "network",
            "ssh",
            "tls-policy",
            "trusted-networks",
            "logs",
            "terminal",
            "subscription"
        );
        %appRoutes = map { $_ => 1 } NethServer::ApiTools::list_applications();
        last;
    }
}

my $userShell = (getpwuid($>))[8];
if($userShell =~ m/sh$/) {
    $sysRoutes{'terminal'} = 1;
}

print encode_json({
    "system" => [sort keys %sysRoutes],
    "applications" => [sort keys %appRoutes],
    "status" => {
        "isRoot" => $isRoot,
        "isAdmin" => $isAdmin,
    }
});
